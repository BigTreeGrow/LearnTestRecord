<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BEEQ5ERR9B/8I1DqtyyDygAAAABJRU5ErkJggg==
</value>
  </data>
</root>